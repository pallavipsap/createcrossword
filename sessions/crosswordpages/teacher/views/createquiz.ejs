<html>
    <head>
        <!-- <link rel="stylesheet" href="../css/createquiz.css" type="text/html"/> -->
        <!-- <link rel="stylesheet" href="css/createquiz.css" type="text/html"/> -->
        <link rel="stylesheet" href="/css/createquiz.css"/>
        <link rel="stylesheet" href="/css/crossword.css"/>
        <!-- works with and without type="text/html" -->
    
        <title> Display Quiz for specific group Page </title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    </head>


    <!-- <nav>
        <a id="home" href="">Home</a>
        <a id="tutorial" href="">Tutorial</a>
        
		<div class="dropdown">
			<button type="button" style="background-color:grey" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
				Pallavi
			</button>
			<div class="dropdown-menu">
			<a class="dropdown-item" href="/logout">Logout</a>
			</div>
		</div>
     </nav>  -->

     <nav class="navbar navbar-inverse">
     <div class="container-fluid">
        <div class="navbar-header">
          <a class="navbar-brand" href="#">CrossBuildPlay</a>
        </div>
        <ul class="nav navbar-nav">
          <li class="active"><a href="#">Home</a></li>
          <li class="active"><a href="#">Groups</a></li>
          <li class="active"><a href="#">Tutorial</a></li>
        </ul>
        <ul class="nav navbar-nav navbar-right">
          <!-- <li><a href="#"><span class="glyphicon glyphicon-user"></span> Sign Up</a></li> -->
          <!-- <li><a href="#"><span class="glyphicon glyphicon-log-in"></span>Logout</a></li> -->
          <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Pallavi <span class="caret"></span></a>
              <!-- <span class="caret"></span></a> -->
            <ul class="dropdown-menu">
              <a class="dropdown-item" href="/logout">Logout</a>
              <!-- <li><a href="#">Page 1-2</a></li>
              <li><a href="#">Page 1-3</a></li> -->
            </ul>
          </li>
        </ul>
      </div>
      </nav>

    
    <form id = "saveForm" method="POST" action="/submitquiz"></form>
    
    
    <!-- input for New create crossword
    {"userId":"5fe661112aaedc40d812bd47",
    "username":"sapalep1",
    "course_id":"4a22ed50-d498-44bb-9188-a164c1a10385",
    "course":"check1-check1"} -->
    
  <body>
    <div class="main-container">
      <!-- incoming data -->
        <textarea name = "course_data" id = "course_data_json"><%= JSON.stringify(data)%></textarea>
        <!-- <a href="/logout" action = "/logout">Logout</a> -->
        <!--Div for input data on the left-->
        <!--<div class="row">-->
        <!--<div class="col-md-7"> -->
		<!-- <div class="main-container"> -->
			
    <p id = "welcomemessage"></p>
		<div class="row">
		<div class="col-md-6">
		<div class="left-aligned-content">
		    <div class ="box-align">
          <label>Course Name : </label>
          <span type="text" name="course" id="course" form = "saveForm" required></span> <!-- in future pass course name to display -->
          <br>

          <label>Title of the crossword*</label>
          <label class="validation-error hide" id="answerValidationError">This field is required.</label>
          <input class="textbox_align" type="text"  id="title"  name="title" style="display: table-cell" placeholder = "eg. Conditional statements" form = "saveForm" required/>
            
          <br><br>
          <div>
            <label>Instructions for the player *</label>
            <label class="validation-error hide" id="answerValidationError">This field is required.</label>
            <textarea class="textbox_align" id="instructions" name="instructions" placeholder = "eg. Read the clues and fill in correct answer" form = "saveForm" required ></textarea>
          </div>
          <br>
          
            
          <!-- question answer form -->
          <!-- add row function call -->
          <div class="question_answer"> <!--div for box around question answer -->
              <form onsubmit="event.preventDefault();onFormSubmit();" autocomplete="off">
              
              <div>
                <label>Question*</label>
                <label class="validation-error hide" id="questionValidationError">This field is
                required.</label>
                <textarea class="textbox_align" name="question" id="question" placeholder = "No line limitations for question. Formatting with spaces, identations or line breaks is recommended before adding the question. Code snippets are also allowed"  required></textarea> <!--<textarea placeholder="type text here"></textarea>-->
              </div>
                          
              <br>	
              
              <div>
                <label>Answer* ( no spaces allowed )</label>
                <label class="validation-error hide" id="answerValidationError">This field is required.</label>
                <input class="textbox_align" type="text" name="answer" id="answer" placeholder = "No spaces allowed. Any word or expression with special characters eg. while, do-while, a+b" required/>
              </div>

              <br>
              
              <div>
                <label>Points for correct answer*</label>
                <label class="validation-error hide" id="answerValidationError">This field is required.</label>
                <input type="text" name="orig_qascore" id="orig_qascore" placeholder = "Any integer or decimal number eg. 4, 2.5" required/>
              </div>

              <br>
      
              <div class="form-action-buttons">
                <input type="submit" id="qa-submit" value="Add Row" />
              </div>
            
              </form>
          </div> <!--div for box around question answer -->
        </div>  <!-- end of class ="box-align" -->
    </div><br> <!-- end of class="left-aligned-content" -->

    <!-- <textarea name = "course_data" id = "course_data_json"><%= JSON.stringify(data)%></textarea> -->
    <textarea name="ques_ans_data" id="ques_ans_data" form = "saveForm"></textarea>
    <!-- style = "display:none" -->
    </div> <!--end of col-md-6-->
       
        <!-- Textbox just for DB data -->
        
        <!-- style="display:none;" hides the textbox -->

        <!--second row -->
        <!-- question - answer table   -->
		<div class="col-md-6">
		<label>Questions added will be listed here</label><br>
    <div class="table-wrapper-scroll-y my-custom-scrollbar">
      <table class="table table-bordered" id="quizList" >
        <thead style="background-color:#5CACEE;">
        <tr>
            <!-- <th style="width: 10%">Sr.No.</th>
            <th style="width: 40%">Question</th>
            <th style="width: 20%">Answer</th>
            <th style="width: 10%">Points</th>
            <th style="width: 20%">Options</th> -->
            <th style="width: 10%" scope="col">#</th>
            <th style="width: 40%" scope="col">Question</th>
            <th style="width: 20%" scope="col">Answer</th>
            <th style="width: 10%" scope="col">Points</th>
            <th style="width: 20%" scope="col">Options</th>
        </tr>
        </thead>

        <tbody>

        <!-- for edit / duplicate options , this code is used to create question answer table on page load-->
        <% if (JSON.stringify(data.quizdata)) {  %>
            <!-- <%= JSON.stringify(data.quizdata) %> -->
            <% for(var i=0; i< data.quizdata.length; i++) { %>
            <tr> 
                <td></td>
                <td id = "question_col"><%-data.quizdata[i].question %></td>
                <td id = "answer_col"><%-data.quizdata[i].answer %></td>
                <td><%-data.quizdata[i].orig_qascore%></td>
                <td><a onClick="onEdit(this)">Edit</a>
                <a onClick="onDelete(this)">Delete</a></td>
            </tr>
            <%}%>
        <% } %>

        <!-- <tr form = "saveForm">
            <td>serial num</td>
            <td>q1</td>
            <td>a2</td>
            <td>edit/delete</td>
        </tr> -->                          
        </tbody> <!-- body will be populated with ques and ans with mutliple rows-->
    </table>
    </div><br>

		<label style="padding-right:10px">Total points for crossword</label>
        <input type="text" name="points" style="width:10%; text-align:center" id="points_div" form = "saveForm" readonly>
		</div>
		</div> 	<!-- end of row -->
    
    <br><br><br>
	
        <!--</div>-->
        <!-- Akshay -- end of left side -->
        <!-- end of left half -->
    
        <!-- <input type="submit" id = "preview" value="Preview" style="color: blue" onclick="Create()"/><br> -->

        <!-- view quiz renders on right side -->
        <!-- this will be create button on prior quiz -->
        <!-- <input type="submit" value="View Quiz" form = "viewForm"/> -->
        <!-- control goes to crossword.js -->
        
        <!-- <button onclick="saveQuiz()">Save Quiz</button> just to check if text area is diplayed -->
        <!-- <input  class="save-button" type="submit" onclick="saveQuiz()" value="Save Quiz" form = "saveForm" /> -->     
        <!-- <a href="/view-feedbacks">View feedbacks</a> -->
        <!-- </div> -->
          
            
           
        <!-- Akshay start of right half -->
        <!--<div class="col-md-5">-->
        <!-- <div id = "right" class="right"> -->
        <!--<span name = "disclaimer" id = "disclaimer" style = "color:blue">Disclaimer : The crossword which student will attempt will contain same questions, however the orientation of Across and Down may not be the same as you view below. This will not cause any problems when they attempt it or see the grades</span>-->
        
    <div class="info">
			<p><strong>Note:</strong> The crossword which student will attempt will contain same questions, however the orientation of Across and Down may not be the same as you view below. This will not cause any problems when they attempt it or see the grades</p>
		</div>
            
    <div class="center crossword" id="crossword">
        <span style="color: white;" > Crossword will be diplayed here. You atleast need two matched words to create crossword.</span>
    </div><br><br>  
    
    <!-- this is changed -->
    <!-- <div class="float-child" id="child-across">   -->
    <!-- <div class="across">ACROSS</div> -->
    <div class="float-container" id = "float-container" style="display: none;">
        <div class="row">
            <!-- ACROSS start -->
            <div class="col-md-6">
                <table class="table table-bordered" id="across_list" >
                    <!-- form = "saveForm" -->
        
                    <thead style="background-color:#343a40;"> 
                      <tr style="background-color:#5CACEE">
                      <th colspan="3" style="text-align:center;">ACROSS</th> 
                      </tr>
                      <tr>
                      <th style="width: 20%; color: white">#</th>
                      <th style="width: 60%; color: white">Question</th>
                      <th style="width: 20%; color: white">Points</th>
                      </tr>
                    </thead>
          
                      <!-- <div id="acrosstable"> -->
                    <tbody id="at">
                          <!-- row 1 -->
                          <!-- <tr>
                              <td>1</td>
                              <td>Bird</td>
                          </tr> -->
                    </tbody> <!-- body will be populated with ques and ans with mutliple rows-->
                    <!-- </div> -->
                </table>
              </div> <!-- end of across class="col-md-6" -->
                        
              <!--</div>  
              </across-child> -->
              <!-- ACROSS ended -->
      
              <!-- DOWN start -->
              <!-- <div class="float-child">
              <div class="down">DOWN</div> -->
              <div class="col-md-6">
                  <table class="table table-bordered" id="down_list" >
                      <!-- form = "saveForm" -->
                      <thead style="background-color:#343a40;"> 
                        <tr style="background-color:#5CACEE">
                        <th colspan="3" style="text-align:center;">DOWN</th> 
                        </tr>
                        <tr>
                        <th style="width: 20%; color: white">#</th>
                        <th style="width: 60%; color: white">Question</th>
                        <th style="width: 20%; color: white">Points</th>
                        </tr>
                      </thead>
                          <!-- dont need for now -->
                          <!-- <div id="downtable"> -->
                          <tbody id = "dt">
                              <!-- row 1 -->
                              <!-- <tr>
                                  <td>2</td>
                                  <td>Animal</td>
                              </tr> -->
                              
                        </tbody> <!-- body will be populated with ques and ans with mutliple rows-->
                    </table>
              </div> <!-- end of down class="col-md-6" -->
              <!-- DOWN ended -->
            </div> <!-- end of class="row" -->
        </div> <!-- end of class="float-container" -->

        <br>

        <!--  </div>   div float-child end -->                       
        <!-- </div> probably not needed -->  
        <!--</div>  end of right div -->
    

        <div class="info">
            <p><strong>Warning!</strong> Your crossword will be saved only if the crossword can be generated</p>
        </div>

        <div id="savecross" style="text-align:center">
            <input type="submit" id = "save_crossword" value="Save Crossword"  form = "saveForm" disabled/><br>
            <!-- style="pointer-events: none" -->
        </div>
      </br></br>
    </div><!-- end of main-container -->
    

    <script>
      // var textarea_json_object = document.getElementById("course_data_json");
      // var json_object = JSON.parse(textarea_json_object.innerHTML); // type is object // converts all objects from /"/" -- to notmal JSON form , but keys are strings here
      // console.log("This is the JSON object to work with", json_object);
      var json_object = <%- JSON.stringify(data)%>
      console.log("This is the JSON object to work with", json_object);
      document.getElementById("welcomemessage").innerHTML = "Let's " +  json_object.mode + " crossword for course " + json_object.course;
      // document.getElementById("welcomemessage").innerHTML = "Hello " + json_object.username + " go ahead and " +  json_object.mode +" crossword for course name " + json_object.course;
      document.getElementById("course").innerHTML = json_object.course // in future pass course name to display
      var link = "/submitquiz/" + json_object.mode + "/" + json_object.course +  "?course_id=" + json_object.course_id;
      
      // changes because of mode : 
      if(json_object.mode == "edit" || json_object.mode == "duplicate"){ // same thing for duplicate
        // title
        document.getElementById("title").value = json_object.title;
        // maximum points
        document.getElementById("points_div").value = json_object.points;
        // textarea
        document.getElementById("instructions").value = json_object.instructions;
        console.log(typeof(json_object.quizdata))
        document.getElementById("ques_ans_data").innerHTML = JSON.stringify(json_object.quizdata);
        console.log(typeof(json_object.quizdata))
        //Create();
      }
      if(json_object.mode == "edit"){
        link+="&quizid="+json_object.quizid; // send quizid to backend so that this particular quiz is updated in quizdata
      }
      
      document.getElementById("saveForm").action = link;
      console.log(document.getElementById("saveForm"))
      var selectedRow = null;
      var ques_content = [];
      var ans_content = [];
      var serialNumber = 0;
      if (json_object.mode == "create"){
        var final_quiz = {
          qa_data : [],
      };
      }
      // "quizdata":[{"qa_id":1,"question":"q1","answer":"a1"},{"qa_id":2,"question":"q2","answer":"a2"}],"mode":"edit"}
      else{
        
        var final_quiz = {
          qa_data : json_object.quizdata
        }
        console.log("my final quiz in case of edit/duplicate", final_quiz)
        Create(); // load the crossword while page loads, this is handled now in crossword page
      }
      function onFormSubmit() { // takes one question and answer
      if (validate()) {
          var formData = readFormData(); // if data is valid go ahead and read form data
          // selected row is populated when clicked on Edit button
          if (selectedRow == null) {
             insertNewRecord(formData);
             Create();  //calculates total points when record is updated, adds row to across down
            // ques_content.push(formData.question);
            // ans_content.push(formData.answer);
          }
          
          // insert new record
          else {
             updateRecord(formData); // edit selectedRow
             Create();  //calculates total points when record is updated, adds row to across down
          }
          // not needed
          // console.log(typeof formData.question);
          console.log('Current question',formData.question);
          console.log('Current ans',formData.answer);
          console.log('Ques Content', ques_content);
          console.log('Ans Content', ans_content);
      
          console.log('Ques Content length', ques_content.length);
          console.log('Ans Content length', ans_content.length);
          
          resetForm();
      }
      
      }
      // Read form data from text boxes
      function readFormData() {
        var formData = {};
        formData["question"] = document.getElementById("question").value;
        formData["answer"] = document.getElementById("answer").value;
        formData["orig_qascore"] = document.getElementById("orig_qascore").value;
        console.log('Formdata', formData);
        return formData;
      }
      // insert record in the table from onSubmit function
      function insertNewRecord(data) {
        var table = document
            .getElementById("quizList")
            .getElementsByTagName("tbody")[0];
        console.log("Length of table",table.rows.length); //this is the entire tbody element
        var newRow = table.insertRow(table.length); // create <tr> </tr> here ( new row)
        console.log('Newrow',newRow); 
      // var x = document.createElement("input");
      // //x.type = "hidden";
      // x.name = "quiz_question";
      // x.value = data.question;
      // x.form = "saveForm";
      // console.log(x);
      // var y = document.createElement("input");
      // //x.type = "hidden";
      // y.name = "quiz_answer";
      // y.value = data.answer;
      // y.form = "saveForm";
      // console.log(y);
      // //x.type = "hidden";
      // x.name = serialNumber; // key
      // x.value = ques_content;
      // x.form = "saveForm";
      // var d = document.getElementById("saveForm");
      // d.appendChild(x);
      // d.appendChild(y);
      //alert(getStyle('.table_list')); // not needed
      var cell0 = newRow.insertCell(0); // serial number added by css
      console.log("cell0",cell0.innerHTML);
      var cell1 = newRow.insertCell(1);
      cell1.innerHTML = data.question //+ "</pre>";
      cell1.id = "question_col";
      console.log("cell1",cell1);
      // cell1.innerHTML = "<pre>" + data.question + "</pre>";
      var cell2 = newRow.insertCell(2);
      cell2.innerHTML = data.answer;
      cell2.id = "answer_col";
      console.log("cell2",cell2);
      var cell3 = newRow.insertCell(3);
      cell3.innerHTML = data.orig_qascore;
      console.log("cell3",cell3);
      //var ques = this.parentElement.parentElement; // current row
      //var ques_id = ques.rowIndex;
      // console.log("New row", ques_id);
      var ques_id = final_quiz.qa_data.length;
      // QA object pushed everytime to qa_data array
      var QA = {
          qa_id : ques_id + 1,
          question : cell1.innerHTML,
          answer : cell2.innerHTML,
          orig_qascore : parseFloat(cell3.innerHTML) //.toFixed(1)
      };
      console.log("QA",QA);
      final_quiz.qa_data.push(QA); //final_quiz : { ques_ans_data [ qa_id : ,question : , answer ] }
      // var j_object = JSON.stringify(final_quiz);
      // console.log("String json object",j_object);
      // var textarea_data = document.getElementById("ques_ans_data");
      // textarea_data.innerHTML = final_quiz; // set value
      //final_quiz.push(QA);
      console.log("serial number", cell0.getElementsByTagName("td").content);
      var textarea_data = document.getElementById("ques_ans_data"); // get the textarea component
      textarea_data.innerHTML = JSON.stringify(final_quiz.qa_data); // setting value in textarea
      console.log("textarea_data",textarea_data.innerHTML);
      // console.log(document.td);
      var cell4 = newRow.insertCell(4);
      cell4.innerHTML = `<a onClick="onEdit(this)">Edit</a>
                          <a onClick="onDelete(this)">Delete</a>`;
      }
      function resetForm() {
        document.getElementById("question").value = "";
        document.getElementById("answer").value = "";
        document.getElementById("orig_qascore").value = "";
        selectedRow = null;
      }
      // Edit  function : just populates text boxes and selectedRow variable
      // Update function : populates selectedRow with content in text boxes
      // Delete function : Just deletes the selected Row
      // Edit just populates the text boxes with selectedRow content
      function onEdit(td) { // change button name to update Row
        console.log(td);  // console.log(td.parentElement); <td></td>
        selectedRow = td.parentElement.parentElement; // <tr></tr>
        document.getElementById("question").value = selectedRow.cells[1].innerHTML; // text box updated with selected row content
        document.getElementById("answer").value = selectedRow.cells[2].innerHTML; // text box updated with selected row content
        document.getElementById("orig_qascore").value = selectedRow.cells[3].innerHTML; // text box updated with selected row content
        // Update Row
        document.getElementById("qa-submit").value = "Update Row"
        console.log("to be edited row",selectedRow.rowIndex);
      }
      // When Edit is clicked, text boxes populated with selectedRow content, then the same row is updated by this function
      // Selected row is populated by onEdit function
      function updateRecord(formData) { // click on "Update Row" button to insert in table
        // update in table
        selectedRow.cells[1].innerHTML = formData.question;
        selectedRow.cells[2].innerHTML = formData.answer;
        selectedRow.cells[3].innerHTML = formData.orig_qascore;
        // edit the final_quiz object
        final_quiz.qa_data[selectedRow.rowIndex-1].question = formData.question;
        final_quiz.qa_data[selectedRow.rowIndex-1].answer = formData.answer;
        final_quiz.qa_data[selectedRow.rowIndex-1].orig_qascore = parseFloat(formData.orig_qascore) //.toFixed(1);
        // update content in text area with updated final_quiz object
        var textarea_data = document.getElementById("ques_ans_data");
        textarea_data.innerHTML = JSON.stringify(final_quiz.qa_data); // set value
        console.log("updated textarea_data",textarea_data.innerHTML);
        // update in array - not used anywhere
        ques_content.splice(selectedRow.rowIndex-1,1,formData.question);
        ans_content.splice(selectedRow.rowIndex-1,1,formData.question);
        document.getElementById("qa-submit").value = "Add Row"
        }
      function onDelete(td) {
      row = td.parentElement.parentElement;
      if (confirm("Are you sure to delete this record?")) {
          
          console.log(row.rowIndex);
          // delete data from the content array
          ques_content.splice(row.rowIndex-1,1);
          console.log("Row index to be deleted",row.rowIndex);
          ans_content.splice(row.rowIndex-1,1);
          console.log('here',ques_content,ans_content);
          // delete from final_quiz object
          console.log("Row to be deleted", final_quiz.qa_data[row.rowIndex-1] );
          final_quiz.qa_data.splice(row.rowIndex-1,1)
          console.log("final_quiz after deletion",final_quiz.qa_data);
          //delete final_quiz.qa_data[row.rowIndex-1]; // does not work adds null values
          // rename the id before inserting in text area, can write in a function
          var len = final_quiz.qa_data.length;
          var i;
          for( i = 0; i < len; i++) {
          final_quiz.qa_data[i].qa_id = i+1;
          console.log("Quiz id",final_quiz.qa_data[i].qa_id);
          console.log(final_quiz.qa_data);
          }
          // update content in text area
          var textarea_data = document.getElementById("ques_ans_data");
          textarea_data.innerHTML = JSON.stringify(final_quiz.qa_data); // set value
          console.log("updated textarea_data",textarea_data.innerHTML);
          // delete from table
          document.getElementById("quizList").deleteRow(row.rowIndex);
          
          resetForm();
      }
          // Update Row
          Create();
          document.getElementById("qa-submit").value = "Add Row"
      }
      function validate() {
      isValid = true; // consider value is valid
      /*
      if (
          document.getElementById("question").value == "" &&
          document.getElementById("answer").value == ""
      ) {
          isValid = false; // false if value is null
          document.getElementById("questionValidationError").classList.remove("hide"); //removes a class ( hide) , makes the "required field statement visible"
          document.getElementById("answerValidationError").classList.remove("hide");
      } else {*/
      if (
          document.getElementById("answer").value == "" ||
          document.getElementById("question").value == ""
      ) {
          if (document.getElementById("answer").value == "") {
          //only check for answer
          isValid = false; // false if value is null
          console.log("answer", isValid);
          document.getElementById("answerValidationError").classList.remove("hide"); //removes a class ( hide) , makes the "required field statement visible"
          }
          if (document.getElementById("question").value == "") {
          //only check for answer
          isValid = false; // false if value is null
          document
              .getElementById("questionValidationError")
              .classList.remove("hide");
          console.log("question", isValid);
          }
      } else {
          isValid = true;
          if (
          !document
              .getElementById("questionValidationError")
              .classList.contains("hide")
          )
          // contains = returns boolean showing if "hide" class in present
          document.getElementById("questionValidationError").classList.add("hide"); // adds a hide class if it does not have hide, becasue "isvalid is true"
          if (
          !document
              .getElementById("answerValidationError")
              .classList.contains("hide")
          )
          // contains = returns boolean showing if "hide" class in present
          document.getElementById("answerValidationError").classList.add("hide");
      }
      console.log(isValid);
      return isValid;
      }
      function saveQuiz(){
          alert("Do you want to submit the form?");
          console.log("I am in the function SaveQuiz");
          console.log(final_quiz);
          // create text area element
          var x = document.createElement("textarea");
          x.innerHTML = JSON.stringify(final_quiz);
          x.form = "saveForm";
          console.log("x obj", x);
          console.log("x.innerHTML", x.innerHTML);
          var d = document.getElementById("saveForm");
          console.log('Now printing data in textarea');
          console.log("X",x);
          d.appendChild(x);
          alert("The form was submitted");
          //x.type = "hidden";
          //x.name = "quiz_question";
          // x.value = final_quiz;
          // x.innerHTML = final_quiz;
          // // x.form = "saveForm";
          // console.log("I am in the function SaveQuiz")
          // console.log("X",x);
          // var d = document.getElementById("saveForm");
          // d.appendChild(x);
      }
      // *************** UNUSED FUNCTIONS ******************************
      // function rename(final_quiz) { // function to rename on button click 
      //   // capitals = capitals.map(function(obj) { 
      //   //     obj['Myanmar'] = obj['Burma']; // Assign new key 
      //   //     delete obj['Burma']; // Delete old key 
      //   //     return obj; 
      //   // }); 
      //   // console.log(capitals); 
      // } 
      // function getSno() {
      //   serialNumber++;
      //   console.log("In serial Number func");
      //   return serialNumber;
      // }
</script>

<script src="/crossword.js">
    //Create();
  </script>
  
<!-- type="text/javascript"  -->

</body>

<html>