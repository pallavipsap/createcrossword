
<html>
<head>
    <!-- <link rel="stylesheet" href="../css/createquiz.css" type="text/html"/> -->
    <!-- <link rel="stylesheet" href="css/createquiz.css" type="text/html"/> -->
    <link rel="stylesheet" href="/css/createquiz.css"/>
    <link rel="stylesheet" href="/css/playquiz.css"/>
    <!-- works with and without type="text/html" -->

    <title> Display Quiz for specific group Page </title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
</head>

<form id = "saveForm" method="POST" action="/submitquiz"></form>


<!-- input for New create crossword
{"userId":"5fe661112aaedc40d812bd47",
"username":"sapalep1",
"course_id":"4a22ed50-d498-44bb-9188-a164c1a10385",
"course":"check1-check1"} -->

<body>
 
    <textarea name = "course_data" id = "course_data_json"><%= JSON.stringify(data)%></textarea>
    <a href="/logout" action = "/logout">Logout</a>
    <div>Navigation bar is here : Home | About | </div>
    <p id = "welcomemessage"></p>

        <div id="checkForm">
          
          <div>
            <label>Course Name : </label>
            <span type="text" name="course" id="course" form = "saveForm" required></span> <!-- in future pass course name to display -->

          </div>
          <div>
            <label>Title of the crossword*</label><br>
            <label class="validation-error hide" id="answerValidationError">This field is required.</label>
            <input type="text" name="title" id="title" form = "saveForm" required/>
            <!-- form = "saveForm" -->
          </div>
      
          <div>
      
            <label>Maximum points* </label><br>
            <label class="validation-error hide" id="answerValidationError">This field is required.</label>
            <input type="text" name="points" id="points" form = "saveForm" required/>
            <!-- form = "saveForm" -->
      
            <label>Crossword Instructions ( optional ) </label><br>
            <textarea name="instructions" id="instructions" form = "saveForm" required></textarea>
            <!-- <form = "saveForm">-->
          
          </div>
      
          <div>
            <table>
              <td>
                <!--first column-->
                <tr>
      
                  <!-- add row function call -->
                  <form onsubmit="event.preventDefault();onFormSubmit();" autocomplete="off">
      
                    <div>
                      <label>Question*</label><br>
                      <label class="validation-error hide" id="questionValidationError">This field is
                        required.</label>
                      <textarea name="question" id="question"></textarea>
      
                      <!--<textarea placeholder="type text here"></textarea>-->
                    </div>
      
                    <div>
                      <label>Answer*</label><br>
                      <label class="validation-error hide" id="answerValidationError">This field is required.</label>
                      <input type="text" name="answer" id="answer"/>
                      <!--<textarea name="answer" id="answer"></textarea>-->
                    </div>
      
                    <div class="form-action-buttons">
                      <input type="submit" id="qa-submit" value="Add Row" />
                    </div>
      
                  </form>
                </tr>
      
                <!-- need this textbox -->
                <textarea name="ques_ans_data" id="ques_ans_data" form = "saveForm"></textarea>
                <!-- style="display:none;" hides the textbox -->
      
                <!--second row -->
      
                <tr>
                  <div id="mydiv" >
                    <table class="table_list" id="quizList" >
                      <!-- form = "saveForm" -->
      
                      <thead>
                        <tr>
                          <th>Sr.Number</th>
                          <th>Question</th>
                          <th>Answer</th>
                          <th>Options</th>
                        </tr>
                      </thead>
      
                      <div id="entiretable">
                        <tbody>
                          <!-- <tr form = "saveForm">
                            <td>serial num</td>
                            <td>q1</td>
                            <td>a2</td>
                            <td>edit/delete</td>
                          </tr> -->
                          
                        </tbody> <!-- body will be populated with ques and ans with mutliple rows-->
                      </div>
      
                    </table>
                  </div>
                </tr>
              </td>
            </table>
      
            <!-- <div> -->
              <!-- <input type="submit" value="Create Quiz" /> -->
              <!-- <input type="submit" value="Student View" /> -->
              
            <!-- </div> -->
         
          </div>
          <!-- view quiz renders on right side -->
          <!-- this will be create button on prior quiz -->
          <!-- <input type="submit" value="View Quiz" form = "viewForm"/> -->
          <input type="submit" value="Preview" onclick="Create()"/> <!-- control goes to crossword.js -->
          <input type="submit" value="Save Quiz" form = "saveForm"/><br>
      
          <!-- <button onclick="saveQuiz()">Save Quiz</button> just to check if text area is diplayed -->
          <!-- <input  class="save-button" type="submit" onclick="saveQuiz()" value="Save Quiz" form = "saveForm" /> -->
        
          <!-- <a href="/view-feedbacks">View feedbacks</a> -->
      
        </div>
      
        
        <!-- <div class="split right"></div> -->
        <span name = "warning" id = "warning" style = "color:red">Warning : If you click on "Save Quiz" button, you will not be able to change it</span><br>
        <span name = "disclaimer" id = "warning" style = "color:blue">Disclaimer : The crossword which student will attempt will contain same questions, however the orientation of Across and Down may not be the same as you view below. This will not cause any problems when they attempt it or see the grades</span>
        
        <div class="center crossword" id="crossword">
          <span style="color: white;" > Crossword will be created here</span>
        </div>    <!-- </crossword> -->

          <!-- this is changed -->
          <div class="float-container" id = "float-container" style="display: none;">
         
            <div class="float-child">

              <div class="across">ACROSS</div>
    
              <table class="across_list" id="across_list" >
                <!-- form = "saveForm" -->
    
                <!-- <thead>
                  <tr>
                    <th>Sr.Number</th>
                    <th>Question</th>
                    <th>Answer</th>
                    <th>Options</th>
                  </tr>
                </thead> -->
    
                <!-- <div id="acrosstable"> -->
                  <tbody id="at">
                    <!-- row 1 -->
                    <!-- <tr>
                      <td>1</td>
                      <td>Bird</td>
                    </tr> -->
                    
                  </tbody> <!-- body will be populated with ques and ans with mutliple rows-->
                <!-- </div> -->
              </table>
            </div>     <!-- </across-child> -->
            <!-- across ended -->
    
            <div class="float-child">
              <div class="down">DOWN</div>
  
                <table class="down_list" id="down_list" >
                    <!-- form = "saveForm" -->
        
                    <!-- dont need for now -->
                    <!-- <div id="downtable"> -->
                      <tbody id = "dt">
                        <!-- row 1 -->
                        <!-- <tr>
                          <td>2</td>
                          <td>Animal</td>
                        </tr> -->
                        
                      </tbody> <!-- body will be populated with ques and ans with mutliple rows-->
                    </table>
                    </div>  <!-- </down-child> -->
                 
                </div>    <!-- </container> -->
         
        <!-- </div> probably not needed -->
       
      
        <!-- <script src="script.js"></script> -->
    

<script>
        // var textarea_json_object = document.getElementById("course_data_json");
        // var json_object = JSON.parse(textarea_json_object.innerHTML); // type is object // converts all objects from /"/" -- to notmal JSON form , but keys are strings here
        // console.log("This is the JSON object to work with", json_object);


        var json_object = <%- JSON.stringify(data)%>
        console.log("This is the JSON object to work with", json_object);
        document.getElementById("welcomemessage").innerHTML = "Hello " + json_object.username + " go ahead and " +  json_object.mode +" crossword for course name " + json_object.course;
        document.getElementById("course").innerHTML = json_object.course // in future pass course name to display
        var link = "/submitquiz/" + json_object.mode + "/" + json_object.course +  "?course_id=" + json_object.course_id;
        
        // changes because of mode : 

        if(json_object.mode == "edit" || json_object.mode == "duplicate"){ // same thing for duplicate

          // title
          document.getElementById("title").value = json_object.title;
          // maximum points
          document.getElementById("points").value = json_object.points;
          // textarea
          console.log(typeof(json_object.quizdata))
          document.getElementById("ques_ans_data").innerHTML = JSON.stringify(json_object.quizdata);
          console.log(typeof(json_object.quizdata))
        }

        if(json_object.mode == "edit"){

          link+="&quizid="+json_object.quizid;
        }


        
        document.getElementById("saveForm").action = link;
        console.log(document.getElementById("saveForm"))

        var selectedRow = null;
        var ques_content = [];
        var ans_content = [];
        var serialNumber = 0;

        var final_quiz = {
            qa_data : []
        };


        function onFormSubmit() {
        if (validate()) {

            
            var formData = readFormData(); // if data is valid go ahead and read form data
            // selected row is populated when clicked on Edit button
            if (selectedRow == null) {
            insertNewRecord(formData);
            ques_content.push(formData.question);
            ans_content.push(formData.answer);
            }
            
            // insert new record
            else {
            updateRecord(formData); // edit selectedRow
            }
            // console.log(typeof formData.question);
            console.log('Current question',formData.question);
            console.log('Current ans',formData.answer);

            console.log('Ques Content', ques_content);
            console.log('Ans Content', ans_content);
        
            console.log('Ques Content length', ques_content.length);
            console.log('Ans Content length', ans_content.length);
            
            resetForm();
        }
        
        }

        // Read form data from text boxes
        function readFormData() {
        var formData = {};
        formData["question"] = document.getElementById("question").value;
        formData["answer"] = document.getElementById("answer").value;
        console.log('Formdata', formData);
        return formData;
        }


        // insert record in the table from onSubmit function
        function insertNewRecord(data) {
        var table = document
            .getElementById("quizList")
            .getElementsByTagName("tbody")[0];

        console.log("Length of table",table.rows.length); //this is the entire tbody element

        var newRow = table.insertRow(table.length); // create <tr> </tr> here ( new row)
        console.log('Newrow',newRow); 

        // var x = document.createElement("input");
        // //x.type = "hidden";
        // x.name = "quiz_question";
        // x.value = data.question;
        // x.form = "saveForm";
        // console.log(x);

        // var y = document.createElement("input");
        // //x.type = "hidden";
        // y.name = "quiz_answer";
        // y.value = data.answer;
        // y.form = "saveForm";
        // console.log(y);

        // //x.type = "hidden";
        // x.name = serialNumber; // key
        // x.value = ques_content;
        // x.form = "saveForm";

        // var d = document.getElementById("saveForm");
        // d.appendChild(x);
        // d.appendChild(y);

        //alert(getStyle('.table_list')); // not needed

        var cell0 = newRow.insertCell(0); // serial number added by css
        console.log("cell0",cell0.innerHTML);

        
        var cell1 = newRow.insertCell(1);
        cell1.innerHTML = data.question //+ "</pre>";
        console.log("cell1",cell1);
        // cell1.innerHTML = "<pre>" + data.question + "</pre>";
        

        var cell2 = newRow.insertCell(2);
        cell2.innerHTML = data.answer;
        console.log("cell2",cell2);

        //var ques = this.parentElement.parentElement; // current row
        //var ques_id = ques.rowIndex;
        // console.log("New row", ques_id);

        var ques_id = final_quiz.qa_data.length;

        // QA object pushed everytime to qa_data array
        var QA = {
            qa_id : ques_id + 1,
            question : cell1.innerHTML,
            answer : cell2.innerHTML
        };
        console.log("QA",QA);

        final_quiz.qa_data.push(QA); //final_quiz : { ques_ans_data [ qa_id : ,question : , answer ] }
        // var j_object = JSON.stringify(final_quiz);
        // console.log("String json object",j_object);
        // var textarea_data = document.getElementById("ques_ans_data");
        // textarea_data.innerHTML = final_quiz; // set value
        //final_quiz.push(QA);

        console.log("serial number", cell0.getElementsByTagName("td").content);
        var textarea_data = document.getElementById("ques_ans_data"); // get the textarea component
        textarea_data.innerHTML = JSON.stringify(final_quiz.qa_data); // setting value in textarea
        console.log("textarea_data",textarea_data.innerHTML);

        // console.log(document.td);

        var cell3 = newRow.insertCell(3);
        cell3.innerHTML = `<a onClick="onEdit(this)">Edit</a>
                            <a onClick="onDelete(this)">Delete</a>`;

        }

        function resetForm() {
        document.getElementById("question").value = "";
        document.getElementById("answer").value = "";

        selectedRow = null;
        }

        // Edit  function : just populates text boxes and selectedRow variable
        // Update function : populates selectedRow with content in text boxes
        // Delete function : Just deletes the selected Row

        // Edit just populates the text boxes with selectedRow content
        function onEdit(td) {

        console.log(td);  // console.log(td.parentElement); <td></td>
        selectedRow = td.parentElement.parentElement; // <tr></tr>
        document.getElementById("question").value = selectedRow.cells[1].innerHTML; // text box updated with selected row content
        document.getElementById("answer").value = selectedRow.cells[2].innerHTML; // text box updated with selected row content
        console.log("to be edited row",selectedRow.rowIndex);

        }

        // When Edit is clicked, text boxes populated with selectedRow content, then the same row is updated by this function
        // Selected row is populated by onEdit function
        function updateRecord(formData) {

        // update in table
        selectedRow.cells[1].innerHTML = formData.question;
        selectedRow.cells[2].innerHTML = formData.answer;

        // edit the final_quiz object
        final_quiz.qa_data[selectedRow.rowIndex-1].question = formData.question;
        final_quiz.qa_data[selectedRow.rowIndex-1].answer = formData.answer;

        // update content in text area with updated final_quiz object
        var textarea_data = document.getElementById("ques_ans_data");
        textarea_data.innerHTML = JSON.stringify(final_quiz.qa_data); // set value
        console.log("updated textarea_data",textarea_data.innerHTML);

        // update in array
        ques_content.splice(selectedRow.rowIndex-1,1,formData.question);
        ans_content.splice(selectedRow.rowIndex-1,1,formData.question);
        }

        function onDelete(td) {

        row = td.parentElement.parentElement;
        if (confirm("Are you sure to delete this record?")) {
            
            console.log(row.rowIndex);

            // delete data from the content array
            ques_content.splice(row.rowIndex-1,1);
            console.log("Row index to be deleted",row.rowIndex);
            ans_content.splice(row.rowIndex-1,1);
            console.log('here',ques_content,ans_content);

            // delete from final_quiz object
            console.log("Row to be deleted", final_quiz.qa_data[row.rowIndex-1] );
            final_quiz.qa_data.splice(row.rowIndex-1,1)
            console.log("final_quiz after deletion",final_quiz.qa_data);
            //delete final_quiz.qa_data[row.rowIndex-1]; // does not work adds null values

            // rename the id before inserting in text area, can write in a function
            var len = final_quiz.qa_data.length;
            var i;
            for( i = 0; i < len; i++) {
            final_quiz.qa_data[i].qa_id = i+1;
            console.log("Quiz id",final_quiz.qa_data[i].qa_id);
            console.log(final_quiz.qa_data);
            }

            // update content in text area
            var textarea_data = document.getElementById("ques_ans_data");
            textarea_data.innerHTML = JSON.stringify(final_quiz.qa_data); // set value
            console.log("updated textarea_data",textarea_data.innerHTML);

            // delete from table
            document.getElementById("quizList").deleteRow(row.rowIndex);
        
            resetForm();
        }
        }

        function validate() {
        isValid = true; // consider value is valid
        /*
        if (
            document.getElementById("question").value == "" &&
            document.getElementById("answer").value == ""
        ) {
            isValid = false; // false if value is null
            document.getElementById("questionValidationError").classList.remove("hide"); //removes a class ( hide) , makes the "required field statement visible"
            document.getElementById("answerValidationError").classList.remove("hide");
        } else {*/

        if (
            document.getElementById("answer").value == "" ||
            document.getElementById("question").value == ""
        ) {
            if (document.getElementById("answer").value == "") {
            //only check for answer
            isValid = false; // false if value is null
            console.log("answer", isValid);
            document.getElementById("answerValidationError").classList.remove("hide"); //removes a class ( hide) , makes the "required field statement visible"
            }

            if (document.getElementById("question").value == "") {
            //only check for answer
            isValid = false; // false if value is null
            document
                .getElementById("questionValidationError")
                .classList.remove("hide");
            console.log("question", isValid);
            }
        } else {
            isValid = true;
            if (
            !document
                .getElementById("questionValidationError")
                .classList.contains("hide")
            )
            // contains = returns boolean showing if "hide" class in present
            document.getElementById("questionValidationError").classList.add("hide"); // adds a hide class if it does not have hide, becasue "isvalid is true"

            if (
            !document
                .getElementById("answerValidationError")
                .classList.contains("hide")
            )
            // contains = returns boolean showing if "hide" class in present
            document.getElementById("answerValidationError").classList.add("hide");
        }
        console.log(isValid);
        return isValid;
        }



        function saveQuiz(){
        alert("Do you want to submit the form?");
        console.log("I am in the function SaveQuiz");
        console.log(final_quiz);

        // create text area element
        var x = document.createElement("textarea");
        x.innerHTML = JSON.stringify(final_quiz);
        x.form = "saveForm";
        console.log("x obj", x);
        console.log("x.innerHTML", x.innerHTML);
        var d = document.getElementById("saveForm");
        console.log('Now printing data in textarea');
        console.log("X",x);
        d.appendChild(x);

        alert("The form was submitted");
        //x.type = "hidden";
        //x.name = "quiz_question";
        // x.value = final_quiz;


        // x.innerHTML = final_quiz;
        // // x.form = "saveForm";
        // console.log("I am in the function SaveQuiz")
        // console.log("X",x);

        // var d = document.getElementById("saveForm");
        // d.appendChild(x);

        }

        // *************** UNUSED FUNCTIONS ******************************

        // function rename(final_quiz) { // function to rename on button click 
        //   // capitals = capitals.map(function(obj) { 
        //   //     obj['Myanmar'] = obj['Burma']; // Assign new key 
        //   //     delete obj['Burma']; // Delete old key 
        //   //     return obj; 
        //   // }); 
        //   // console.log(capitals); 
        // } 

        // function getSno() {
        //   serialNumber++;
        //   console.log("In serial Number func");
        //   return serialNumber;
        // }
</script>

<script src="/crossword.js"></script>
<!-- type="text/javascript"  -->

</body>

<html>